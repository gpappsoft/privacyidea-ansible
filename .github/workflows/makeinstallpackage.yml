name: makeinstallpackage

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      
    steps:
      - uses: actions/checkout@v4
      - name: Compress action step
        run: tar cvzf privacyidea.tgz ./privacyidea
          
      - name: Add payload to install.sh
        id: add-payload
        run: cat install.sh privacyidea.tgz > install_pi.sh

      - uses: actions/upload-artifact@v4   
        with:
          name: install.sh
          path: install_pi.sh
          overwrite: true
          compression-level: 0

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ANSIBLETOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ANSIBLETOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./install_pi.sh
          asset_name: install.sh
          asset_content_type: text/x-shellscript

      

    
